// 1. Import Required Modules
// Example of third party middleware

var express = require("express");
var fs = require("fs");
var morgan = require("morgan");
var path = require("path");

const app = express();

// express: The web framework for building the server.
// fs: Provides file system functionalities, used here to create a writable stream.
// morgan: A logging middleware for HTTP requests in Express.
// path: Helps in resolving file paths, ensuring cross-platform compatibility.

// you have to make a file access.log in the directory to read and write
// the logs to do this you have to make a stream that will made by the help of createWriteStream method of fs module.

var accessLogStream = fs.createWriteStream(path.join(__dirname, "access.log"), { flags: "a" });

// Other Common Flags for File Operations:
// 'r': Open for reading. If the file doesn't exist, an error is thrown.
// 'w': Open for writing. If the file exists, it will be overwritten; if it doesn't, a new file will be created.
// 'r+': Open for reading and writing. If the file doesn't exist, an error is thrown.
// 'w+': Open for reading and writing. If the file exists, it will be overwritten; if it doesn't exist, a new file will be created.
// 'a+': Open for reading and appending. If the file doesn't exist, it will be created.
// 'a' flag is great for situations where you want to keep adding new data to a file (like logging), without affecting the existing content.

// This line creates a writable stream to a file called access.log. The path.join(__dirname, 'access.log') ensures
//  that the log file is created in the same directory as your server script. The { flags: 'a' } option ensures the
// log entries are appended to the file instead of overwriting it.

app.use(morgan("combined", { stream: accessLogStream }));

// This uses the morgan middleware to log HTTP requests in the "combined" format (which includes details like the IP address, HTTP method, status code, and more).
// The stream: accessLogStream option directs morgan to write the logs to the access.log file instead of the console.

app.get("/", (req, res) => {
  res.send("Hello World");
});

app.get("/about", (req, res) => {
  res.send("About Us");
});

// Run the server using node index.js and visit http://localhost:3000/ in your browser.

// You can now check the access.log file to see the log entries generated by the morgan middleware.

// The access.log file will contain log entries for each HTTP request made to the server, including details like the IP address, HTTP method, status code, and more.

// This is a basic example of how to use the morgan middleware to log HTTP requests to a file in an Express.js application. You can customize the log format and destination based on your requirements.

app.listen(3000, () => {
  console.log(`Server is running on http://localhost:3000/`);
});
